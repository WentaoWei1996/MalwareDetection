package com.xidian.malwaredetection.bloomfilter;

import com.xidian.malwaredetection.bloomfilter.countingbloomfilter.CountingBloomFilterMemory;
import com.xidian.malwaredetection.bloomfilter.HashProvider.*;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

/**
 * @author wwt
 * @date 2019/8/23 10:04
 */
@Component("create")
//@Service
public class CreateCountingBloomFilter {
    private int n = 100000;
    private double p = 0.001;
    private HashMethod hashMethod;
    private FilterBuilder config;
    private CountingBloomFilterMemory countingBloomFilterMemory;

    public CreateCountingBloomFilter() {
        this.config = new FilterBuilder(n,p).hashFunction(HashProvider.HashMethod.MD5).complete();
    }

    public CreateCountingBloomFilter(FilterBuilder config){
        this.config = config;
    }

    public CreateCountingBloomFilter(int n, double p, HashMethod hashMethod) {
        this.n = n;
        this.p = p;
        this.hashMethod = hashMethod;
        this.config = new FilterBuilder(n,p).hashFunction(hashMethod).complete();
    }

    public CreateCountingBloomFilter createFilter(){
        this.countingBloomFilterMemory = new CountingBloomFilterMemory<>(config);
        return this;
    }

    public void setN(int n) {
        this.n = n;
    }

    public void setP(double p) {
        this.p = p;
    }

    public void setHashMethod(HashMethod hashMethod) {
        this.hashMethod = hashMethod;
    }

    public FilterBuilder getConfig() {
        return config;
    }

    public void setConfig(FilterBuilder config) {
        this.config = config;
    }

    public CountingBloomFilterMemory getCountingBloomFilterMemory() {
        return countingBloomFilterMemory;
    }
}
